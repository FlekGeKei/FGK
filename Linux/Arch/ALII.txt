# Устанавливаем минимальную (базовую) систему (при входе в livecd выбираем первый вариант из списка)
	# Подключаемся к интернетунету
		# Если и-нет проводной
			dhcpcd
			# Проверяем подключение
			ping google.com
		# Если wifi
			# Смотрим имя безпроводного интерфейса
			ip a 
			# Разблокировка wifi
			rfkill unblock wifi
			# Включаем wifi
			ip link set //имя безброводного интерфейса(пример wlan0)\\ up
			# Входим в iwd
			iwctl
			# Подключаемся к wifi (пароль не должен отображаться)
			station //имя безброводного интерфейса(пример wlan0)\\ connect "//имя точки доступа\\"
			# Выходим из iwd
			exit
			# Проверяем подключение
			ping google.com
		# Если интернет не работает
			# Открваем resolv.conf
			nano /etc/resolv.conf
				# Прописываем туда
					nameserver 8.8.8.8
					nameserver 8.8.4.4
				# Сохраняем и выходим из nano (^ = ctrl)
				^O 
				# Ентер
				^X 
	# Размечаем диск
		# Просмотр дисков в системе
		fdisk -l
		# Создаём таблицу разделов gpt
		fdisk //название диска (пример /dev/sda)\\
			# Вводим
				g
				# Ентер
				w
				# Ентер
		# Разбивка диска
		cfdisk //название диска (пример /dev/sda)\\	
			# Создаём разделы
				# Если на материнке установлен bios, а не uefi (efi) то создаём раздел в 31M с типом (кнопка [Type]) 'BIOS boot'
				# Создаём раздел от 300m до 500M с типом (кнопка [Type]) 'EFI System'
				# По желанию создаём раздел подкачки с типом (кнопка [Type]) 'Linux swap'
				# Создаём раздел на всё оставшееся свободное место с типом (кнопка [Type]) 'Linux filesystem'
			# Сохраняем изменения (кнопка [Write]), соглашаемся с изменениями (вводим yes)
			# Выходим
		# Проверяем разбивку диска
		fdisk -l
		# Создаём файловую систему на созданых разделах диска (раздел с типом 'BIOS boot' нетрогаем (если его делали))
			#
			mkfs.vfat //путь до раздела с типом 'EFI System' (пример /dev/sda1)\\
			# Если создали раздел подкачки
			mkswap //путь до раздела с типом 'Linux swap' (пример /dev/sda2)\\
			# Включаем раздел подкачки
			swapon //путь до раздела с типом 'Linux swap' (пример /dev/sda2)\\
			#
			mkfs.btrfs //путь до раздела с типом 'Linux filesystem' (пример /dev/sda3)\\
			# Если неполучилось
			mkfs.btrfs -f //путь до раздела с типом 'Linux filesystem' (пример /dev/sda3)\\
	# Монтируем разделы
		# Монтируем систему
		mount //путь до раздела с типом 'Linux filesystem' (пример /dev/sda3)\\ /mnt
		mkdir /boot
		# Монтируем boot
			# Для efi
			mkdir /boot/efi
			mount //путь до раздела с типом 'EFI System' (пример /dev/sda1)\\ /boot/efi
			# Для bios
			mount //путь до раздела с типом 'EFI System' (пример /dev/sda1)\\ /boot
	# Устанавливаем систему
	pacstrap -i /mnt base base-devel linux-zen linux-zen-headers linux-firmware dosfstools btrfs-progs intel-ucode iucode-tool nano git wget
		# Можно установить другое ядро
		# Если процессор от amd то заменяем intel-ucode на amd-ucode
		# Я мог вписать неправильные названия пакетов
	# Создаём конфиг конфигурации файловых систем
	genfstab -U /mnt >> /mnt/etc/fstab
	# Переходим в систему
	arch-chroot /mnt
		# Конфигурируем время и дату
		ln -sf /usr/share/zoneinfo/Europe/Kiev /etc/localtime
			# Вместо Kiev прописоваем часовой пояс (регион)
		#
		hwclock --systohc
		# Русификация систеы
			# Открываем конфиг с локалями
			nano /etc/locale.gen
				# Декоментируем (убираем # ) языки которые будем использовать
					#en_US.UTF-8 UTF-8		# Обязательно
					#ru_RU.UTF-8 UTF-8		# Необязательно
				# Сохраняем и выходим из nano (^ = ctrl)
				^O 
				# Ентер
				^X 
			# Генерируем локали
			locale-gen
			# Переводим систему
			nano /etc/locale.conf
				# Вводим локаль на которой будет система
					LANG=//язык который будете использовать (пример русский = ru_RU.UTF-8 )\\
				# Сохраняем и выходим из nano (^ = ctrl)
				^O 
				# Ентер
				^X 
			# Настраиваем язык консоли
			nano /etc/vconsole.conf
				# Вписываем туда
					KEYMAP=//язык который будете использовать (пример русский = ru )\\
					FONT=cyr-sun16
				# Сохраняем и выходим из nano (^ = ctrl)
				^O 
				# Ентер
				^X 
		# Задаём имя компа
		nano /etc/hostname
			# Вписываем имя компа
			# Сохраняем и выходим из nano (^ = ctrl)
			^O 
			# Ентер
			^X 
		# Настраиваем доменные имена
		nano /etc/hosts
			# Вписываем туда
				127.0.0.1  localhost
				::1        localhost
				127.0.0.1  //имя компьютера которое вписали раннее\\.localdomain  //имя компьютера которое вписали раннее\\
			# Сохраняем и выходим из nano (^ = ctrl)
			^O 
			# Ентер
			^X 
		# Создаём образ ядра для оперативной памяти
			# Если установили одно ядро
			mkinitcpio -P
			# Если больше одного
			mkinitcpio -p //предпочитаемое ядро (пример linux-zen)\\
		# Устанавливаем пароль для root (пароль не должен отображаться) (обязательно его запомниль или запусать)
			# Вводим пароль 
			# Подтверждаем его
		# Скачиваем загрузчик и сетевые утелиты
		pacman -S efibootmgr dhcpcd dhclient networkmanager
		# Устанавливаем загрузчик
			# Установка grub
				# Скачиваем grub
				pacman -S grub
				# Установка 
				grub-install //путь до диска с системой (пример /dev/sda)\\
					# Если не сработало и на метеринке установлен uefi (efi) биос то
					grub-install --boot-directory=/boot/efi
				# Конфигурируем загрузчик
				grub-mkconfig -o /boot/grub/grub.cfg
			# Refind
			pacman -S refind gdisk
			refind-install
			nano /boot/refind_linux.conf
				# Удаляем первые две строчки (^K)
			nano /boot/efi/EFI/refind/refind.conf
				^w
					arch linux
					# Ввод
				# В строчке options  "root=PARTUUID=... rw add_efi_memmap" кучю букв заменяем на раздел с системой. Пример:
					options  "root=PARTUUID=/dev/sda3 rw add_efi_memmap"
		# Выходим из системы
		exit
	# Всё размонтируем
	umount -R /mnt
	# Перезагружаемся в установленную систему
	reboot
# Доустанавливаем систему
	# Входим в систему под root пользователем
	# Разрешаем root доступ для обычных пользователей
	nano /etc/sudoers
		# Декоментируем строку
			# %wheel ALL=(ALL) ALL
		# Сохраняем и выходим из nano (^ = ctrl)
		^O 
		# Ентер
		^X
	# Создаём обычную учётную запись
		# Добавляем обычного пользователя
		useradd -m -G wheel -s /bin/bash //имя пользователя в нижнем регистре на латиниц\\
		# Создаём пароль для созданного пользователь (пароль не должен отображаться)
		passwd //имя созданного пользователя\\
	# Подключаемся к интернетунету
		# Если и-нет проводной
			dhcpcd
			# Проверяем подключение
			ping google.com
		# Если wifi
			# Смотрим имя безпроводного интерфейса
			ip a 
			# Разблокировка wifi
			rfkill unbloock wifi
			# Включаем wifi
			ip link set //имя безброводного интерфейса(пример wlan0)\\ up
			# Подключаемся
			nmtui
			# Проверяем подключение
			ping google.com
		# Если интернет не работает
			# Открваем resolv.conf
			nano /etc/resolv.conf
				# Прописываем туда
					nameserver 8.8.8.8
					nameserver 8.8.4.4
				# Сохраняем и выходим из nano (^ = ctrl)
				^O 
				# Ентер
				^X 
			# Можно ещё перезагружаться пока незаработает
	# Выходим из root'a
	exit
	# Логигимся под созданным пользователем
	# Запускаем сетевую службу
	sudo systemctl enable NetworkManager
	# Перезагружаемся (входим под обычным пользователем)
	# Настраиваем репозитории
		# Добавляем chaotic-aur (см https://aur.chaotic.cx/ ) на данный момент это
		sudo pacman-key --recv-key FBA220DFC880C036 --keyserver keyserver.ubuntu.com
		sudo pacman-key --lsign-key FBA220DFC880C036
		sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst' 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'
		# Включаем репозитории
		sudo nano /etc/pacman.conf
			# multilib
				# Декоментируем строчки (убираем # )
					#[multilib]
					#Include = /etc/pacman.d/mirrorlist
			# chaotic-aur
				# Добавляем в конец файла
					[chaotic-aur]
					Include = /etc/pacman.d/chaotic-mirrorlist
			# Сохраняем и выходим из nano (^ = ctrl)
				^O 
				# Ентер
				^X 
	# Ставим драйвера видеоускорения
		# Для intel
			sudo pacman -Syu lib32-mesa vulkan-intel lib32-vulkan-intel vulkan-icd-loader lib32-vulkan-icd-loader libva-intel-driver xf86-video-intel
		# Для Nvidia
			sudo pacman -Syu nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loader lib32-opencl-nvidia opencl-nvidia libxnvctrl 
		# AMD
			sudo pacman -Syu lib32-mesa vulkan-radeon lib32-vulkan-radeon vulkan-icd-loader lib32-vulkan-icd-loader
	# Ставим окружение рабочего стола 
		# Например KDE Plasma
			sudo pacman -S xorg xorg-server plasma plasma-wayland-session egl-wayland sddm sddm-kcm packagekit-qt5 pulseaudio pulseaudio-jack alsa-utils vivaldi dolphin konsole spectacle ananicy nohang noto-fonts noto-fonts-cjk noto-fonts-emoji htop gewenwiev qbittorent vlc ark unrar rar 7-zip audacious playerctl
			# Опционально
				kdeconnect gimp discord steam telegram-desktop haguichi wine winetricks speedcrunch github-desktop onlyoffice-bin pamac-aur pamac-tray-icon-plasma yay
			# Настраиваем автозагрузки
			sudo systemctl enable nohang
			sudo systemctl enable ananicy
			sudo systemctl sddm
		# Sway
			sudo pacman -Syu sway swaybg xorg kitty wofi waybar htop man network-manager-applet alsa-lib alsa-utils pipewire-pulse pipewire-alsa pipewire-jack neovim noto-fonts noto-fonts-cjk noto-fonts-emoji mako wf-recorder slurp grim breeze-icons breeze-gtk breeze fuse ananicy vlc qbittorent ark unrar vivaldi dolphin lightdm pavucontrol qt5ct otf-font-awesome playerctl dolphin ntp
			sudo echo -e "\nHandleLidSwitch=ignore" >> /etc/systemd/logind.conf
			mkdir ~/{Music,Documents,Download,Pictures}
			Конфиги можно мои брать https://github.com/FlekGeKei/FGK
			su && echo -e 'QT_QPA_PLATFORMTHEME=qt5ct\nQT_STYLE_OVERRIDE=Breeze' >> /etc/environment && exit
			sudo systemctl enable lightdm
			sudo systemctl enable ananicy
			sudo systemctl enable nohang
			sudo timedatectl set-ntp true 
			# aur
			qt5ct-kde nerd-fonts-noto
	# Перезагружаемся
	# Необязательная настройка
		# Установка java
			# Скачиваем 64 битную java с сайта
			# Создаём каталог для java
			sudo mkdir /usr/lib/jvm
			# Разархивируем архив в /usr/lib/jvm
			sudo tar zxvf //скачаный архив и путь до него\\ -C /usr/lib/jvm
			# Добавляем команды (симлинки)
			sudo ln -s /usr/lib/jvm///папка с java\\/bin/java /usr/bin/java
			sudo ln -s /usr/lib/jvm///папка с java\\/bin/javac /usr/bin/javac
			# Патчим Bash Profile
			nano ~/.bash_profile
				# Вписываем туда
					export JAVA_HOME=/usr/lib/jvm///папка с java\\
					export PATH="$PATH:$JAVA_HOME/bin"
				# Сохраняем и выходим
		# Установка Sublime Text
			# Добавление репозитория (см https://www.sublimetext.com/docs/linux_repositories.html#pacman ) на данный момент это
			wget https://download.sublimetext.com/sublimehq-pub.gpg  
			sudo pacman-key --add sublimehq-pub.gpg  
			sudo pacman-key --lsign-key 8A8F901A  
			rm sublimehq-pub.gpg
			echo -e "\n[sublime-text]\nServer = https://download.sublimetext.com/arch/stable/x86_64" | sudo tee -a /etc/pacman.conf
			# Сама установка
			sudo pacman -Syu sublime-text
		# Устанавливаем zsh
			# Установка zsh (см https://wiki.archlinux.org/title/Zsh_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9) )
			sudo pacman -S zsh zsh-completions
			# Установка Oh My ZSH! (см https://github.com/ohmyzsh/ohmyzsh)
			sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
		# Пираточки (linux версии) качать можно с freelinuxpcgames.com
